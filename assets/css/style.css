body {
    font-size: 16px;
    font-family: "apparat", sans-serif;
    font-style: normal;
    scroll-behavior: smooth;
}

header {
    background-color: #FFFFFF;
    display: grid;
    height:calc(50px + 6vw); /*Throughout my CSS I have used the 'calc' property to make certain elements reactive, while still making sure they maintain a certain size on the page.*/
    place-items: center;
    min-height: 100px;
    max-height: 120px;
    position: sticky;
    top: 0;
    border-bottom: solid #25242D 1vw; /* I added this small border to seperate the header from the background of the page, as they are both white*/
    color: black;
}

header img {
    width: 100%;
    max-width: 200px;
    min-height: 80%;
    min-width: 150px;
}

h1 {
    color: #FFFFFF;
    font-size: 5vw;
    padding-top: 10vw;
    padding-bottom: 10vw;
    text-align: center;
    align-items: center;
    justify-content: center;
    display: flex;
    font-style: italic;
}

h2 {
    font-size: 3vw;
    text-align: center;
    place-self: center;
    max-height: 120px;
    padding-bottom: 2vw;
    padding-top: 3vw;
}

h3 {
    font-size: 2vw;
    text-align: left;
    max-height: 120px;
    padding-bottom: 2vw;
    font-style: italic;
}

h4 {
    font-size: 2vw;
    text-align: right;
    max-height: 120px;
    padding-bottom: 2vw;
    font-style: italic;
}

h5 {
    font-size: calc(2em + 4vw);
    text-align: center;
    max-height: 120px;
    padding-bottom: 2vw;

}

h6 {
    font-size:calc(20px + 1.4vw);
    text-align: center;
    max-height: 120px;
    padding-bottom: 2vw;
}

.h7 { /* I wish there were more 'h' tags for me to use, I just substituted a class here.*/
    font-size:calc(8px + 1.8vw);
    max-height: 120px;
    padding-bottom: 2vw;
    font-style: italic;
    padding-top: 2vw;
}

.caption {
    font-size:calc(8px + 1vw);
    max-height: 110px;
    text-align: center;
    justify-content: center;
}

header .inner {
    display: flex;
    justify-content: space-between;
}

header nav {
    display: flex;
    align-items: center;
    text-align: right;
    justify-content: right;
}

header nav ul li {
    display: inline;
    margin-left: 0.1em;
}

header nav ul li a {
    color:black;
    text-decoration: none;
    padding: 0.8em;
    font-size:calc(10px + 0.7vw);
}

header nav ul li a:hover {
    color: orange;
    text-transform: uppercase;
}

.hero {
    display: grid;
    grid-template-columns: 50% 50%;
    background-color: #25242D;
    padding: 0px;
    overflow: hidden;
    min-height: 30vw;
}

.intro {
    font-size: calc(8px + 0.8vw);
    text-align: justify;
    justify-content: center;
    padding-bottom: 4vw;
}

.inner {
    width: 90%;
    margin: auto;
}

.reactivevanish {
    height: auto;
    max-width: 100%;
}

.heroimg { /* My hero image took some time to get working correctly, but it now functions reactively and looks good at most page sizes.*/
    width: 100%;
    height: 100%;
    background-image: url(../images/divingboard.png);
    background-repeat: no-repeat;
    background-position: right;
    background-size: 100% 100%;
}

main {
    padding-bottom: 4vw;

}
.gridcontainer { /* The grid for my index page.*/
    display: grid;
    grid-template-columns: 47.5% 5% 47.5%;
    row-gap: 8vw;
    text-align: center;
    justify-content: center;
}

section {
    height: 40vw;
    max-height: 45em;
    width: auto;
    font-size: calc(0.11em + 1.25vw);
    text-align: justify;
}

aside {
    height: 40vw;
    max-height: 45em;
    width: auto;
}

aside img {
    border-radius: 20%;
    height: 100%;
    justify-content: center;
    object-fit: contain;
}

.gallery { /*The Gallery, partner, and event tags all correspond to their specific sub-page. They function similar to the 'section' and 'aside' tags for the index page, but are their own classes for control purposes.*/
    display: grid;
    grid-template-columns: 25% 40% 25%;
    column-gap: 1em;
    row-gap: 3em;
    text-align: center;
    margin: auto;
    justify-content: center;
}

.gallery p {
    background-color: blueviolet;
    padding: 3em;
}

.partner {
    height: 50vw;
    max-height: 60em;
    width: auto; 
    padding-bottom: calc(5em + 5vw);
}

.partner img {
    justify-content: center;
    object-fit: contain;
    height: fit-content;
    width: 100%;
    padding-bottom: 4vw;
    border-bottom: solid #25242D 0.2vw;
}

.partner a {
    text-decoration: none;
    color: black;
}

.partner a:hover {
    text-decoration: underline;
    color: orange;
}


.partner p {
    font-size: calc(0.11em + 1.25vw);
    text-align: justify;
}

.event {
    height: 60vw;
    max-height: 60em;
    width: auto; 
    padding-bottom: calc(5em + 5vw);
}

.event img {
    justify-content: center;
    object-fit: contain;
    max-height: fit-content;
    width: 100%;
    padding-bottom: 1vw;
}

.event h6 {
    font-size:calc(5px + 1.4vw);
    text-align: center;
    max-height: 120px;
    padding-bottom: 2vw;
}

.event p {
    font-size: calc(0.11em + 1.25vw);
    text-align: justify;
}

footer { /* My footer code is quite simple, but it gets the job done as there is little information to put on the footer.*/
    background-color: #25242D;
    max-height: 20em;
    color: #FFFFFF;
    padding: 0.1em;
    margin: auto;
    justify-items: center;
    align-items: center;
    text-align: center;
    min-height: 12em;
}

footer img {
    min-height: fit-content;
    max-height: 50px;
    padding-top: 3.5em;
    opacity: 80%;
}

footer p {
    padding-top: 0.5em;
}

.top { /* This section of code was largely assisted from an online source, however I have altered quite a bit of the code to suit my site.*/
    --offset: 50px; 
    position: sticky;
    bottom: 20px;
    left: 1vw;    
    place-self: end;
    margin-top: calc(100vh + var(--offset));
    text-decoration: none;
    padding: 15px;
    font-family: "apparat";
    color: black;
    background: #F389A2;
    border-radius: 100px;
    white-space: nowrap;
    align-items: center;
    justify-content: center;
}

.partnergrid { /* I made a specific grid tag for each sub-page, so I could have more control of how each page specifically looked.*/
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    row-gap: 5vw;
    column-gap: 2vw;
    padding-top: 6vw;
}

.eventgrid {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    row-gap: 8vw;
    column-gap: 2vw;
    padding-top: 6vw;
}

.gallerygrid {
    display: grid;
    grid-template-columns: 1fr;
    row-gap: 1vw;
    column-gap: 3vw;
    padding-top: 1vw;
    align-items: center;
    text-align: center;
}

.gallerygrid aside {
    padding-bottom: 0.5vw;
    border-bottom: solid #25242D 0.5vw;
}

.title { /*This tag deals with the titles at the start of all the pages except the index.*/
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-content: center;
    background-color: #25242D;
    color: #FFFFFF;
    height: calc(6vw + 5em);
    min-height: 150px;
}

.reactivemenu { /*This section of code was for my substitute for the CSS Hamburger. I couldn't get it to work without copying a tutorial's code, so I preferred to write my own solution as I'd rather not use code I dont understand.*/
    width: 100%;
    height: 20vw;
    min-height: 7em;
    background-color: #F389A3;
    display: none;
    text-align: center;
    justify-content: center;
}

.reactivemenu ul li a {
    color: #FFFFFF;
    font-size: calc(1em + 3vw);
    width: 80%;
    line-height: 1.2em;
}

@media only screen and (max-width: 768px) { /* I didn't add much reactive at 768px, this was mainly just to drop grid sizes and fix spacing of sections or text.*/
    .eventgrid {
        grid-template-columns: 1fr 1fr;
    }
    .partnergrid {
        grid-template-columns: 1fr 1fr;
    }
    .partner p {
        font-size: calc(0.3em + 1.25vw);
    }
    .partnergrid {
        padding-bottom: 20vw;
    }
    .event h6 {
        font-size:calc(10px + 1.4vw);
    }
    
    .event p {
        font-size: calc(0.2em + 1.55vw);
        text-align: justify;
    }
}

@media only screen and (max-width: 650px) { 
    header {
        border-bottom: none;
    }
    .heroimg {
        background-image: none; /* This is where I removed the diving board from the hero section. I did this for readability on smaller devices.*/
    }
    .reactivemenu {
        display: flex;
    }
    .gridcontainer {
        grid-template-columns: 100%;
        row-gap: 1vw;
    }
    section {
        font-size: calc(8px + 0.8vw);
        padding-bottom: calc(1em + 4vw);
    }
    aside {
        padding-bottom: 0.5vw;
    }
    .hero {
        grid-template-columns: 100%
    }
    h1 { /* I made most of the headings change size at smaller screen widths so I could keep them scaling reactively while also handling the switch from landscape to vertical devices.*/
        font-size: calc(0.6em + 5vw);
    }
    h2 {
    font-size: calc(0.8em + 3.5vw);
    }
    h3 {
    font-size: calc(0.8em + 3.5vw);
    text-align: center;
    font-style: normal;
    }
    h4{
    font-size: calc(0.8em + 3.5vw);
    text-align: center;
    font-style: normal;
    }
    aside img {
    height: 45vw;
    }
    .gallerygrid aside img {
    height: 65vw;
    }
    aside {
    min-height: 50vw;
    }
    .gallerygrid aside {
    height: 70vw;
    }
    header nav ul li a {
    display: none;
    }
    .partnergrid {
        grid-template-columns: 1fr;
        text-align: center;
        row-gap: 25vw;
    }
    .partner img {
        width: 60%;
        align-items: center;
        text-align: center;
        padding-top: 10vw;
    }
    .partner p {
        font-size: calc(3vw);
    }
    main {
        padding-bottom: 10em;
    }
    header .inner {
        justify-content: center;
    }
    .h7 {
            font-size: calc(12px + 3vw);
        }
    .eventgrid {
        grid-template-columns: 1fr;
    }
    .event h6 {
        font-size:calc(15px + 1.6vw);
        text-align: center;
        max-height: 120px;
        padding-bottom: 2vw;
    }
    
    .event p {
        font-size: calc(0.3em + 1.25vw);
        text-align: justify;
    }
}

@media only screen and (max-width: 520px) { /*These lower sections were mainly to deal with font overlapping other elements, or images overlapping other elements.*/
    section {
        padding-bottom: calc(4.5em + 6vw);
    }
    header img {
    width: 80px;
    min-height: none;
    min-width: none;
        
    }
}

@media only screen and (max-width: 415px) {
    section {
        padding-bottom: calc(3em + 5vw);
        min-height: 65vw;
    }
}
@media only screen and (max-width: 320px) {
    section {
        min-height: 100vw;
    }
}